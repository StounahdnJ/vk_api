import json
import requests
import time
import config
import User
#–ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö —Ç–æ–∫–µ–Ω–æ–≤ –∏ –∫–ª—é—á–µ–π ---------------------------------
version = config.token['version']  # –í–µ—Ä—Å–∏—è api
token = config.token['token'] # –¢–æ–∫–µ–Ω —Å–æ–æ–±—â–µ—Å—Ç–≤–∞
response = requests.get('https://api.vk.com/method/groups.getLongPollServer',params={'access_token': token,'group_id': 191524305,'v': version,}).json()['response']
data = {'ts':response['ts']} # –ù–æ–º–µ—Ä –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–æ–±—ã—Ç–∏—è
key = response['key'] # –ö–ª—é—á –∑–∞–ø—Ä–æ—Å–∞
server = response['server'] #–°–µ—Ä–≤–µ—Ä –¥–ª—è –æ–∂–∏–¥–∞–Ω–∏—è –æ—Ç–≤–µ—Ç–∞
#-----------------------------------------------------------------
#–ò—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ------------------------------------------
methods={"new":lambda mes:new_followController(mes),None:lambda mes:error(mes),}
command={'–î–æ–±–∞–≤–∏—Ç—å':['new','üòà–£–∫–∞–∂–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—èüòà'],} # action –∏ —Å–æ–æ–±—â–µ–Ω–∏–µ
command_out={'–°–ø–∏—Å–æ–∫':lambda:all_followController()} # –ú–æ–º–µ–Ω—Ç–∞–ª—å–Ω—ã–π –¥–µ–π—Å—Ç–≤–∏—è, –±–µ–∑ –¥–æ–ø –≤–≤–æ–¥–∞
#-----------------------------------------------------------------

def error(mes,detailed=""): # –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ—à–∏–±–∫–∏
	user.message(config.error['main']+config.error[detailed])
	print("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {id}, –≤–≤–æ–¥–∏—Ç –Ω–µ–≤–µ—Ä–Ω—É—é –∫–æ–º–∞–Ω–¥—É {mes}".format(id=user.id,mes=mes))

def all_followController(): # –í—ã–≤–æ–¥ –≤—Å–µ—Ö –∑–∞ –∫–µ–º —Å–ª–µ–¥–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
	reply = user.check_follow()
	if reply['code']:
		out=''
		for follow in reply['items']:
			out+='{id}\n'.format(id=follow[0])
	else: out=config.mes['list is empty']
	user.message(out)
	print("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {id}, –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫".format(id=user.id))

def new_followController(mes): # –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–ª–µ–∂–∫–∏
	reply = user.new_follow(mes)
	if reply['code']:
		user.message("–î–æ–±–∞–≤–ª–µ–Ω–Ω–æ")
		user.del_action()
		print("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {id}, –¥–æ–±–∞–≤–ª—è–µ—Ç {mes} –≤ —Å–ø–∏—Å–æ–∫".format(id=user.id,mes=mes))
	else: error(mes,reply['mes'])

def Controller(mes):
	if user.check_action()['code']: # –ï—Å–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ —É–∂–µ –≤—ã–±—Ä–∞–Ω–æ, —Å–¥–µ–ª–∞—Ç—å –µ–≥–æ
		methods[user.action](mes)
	elif mes in command: # –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ
		user.new_action(command[mes][0])
		user.message(command[mes][1])
		print("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {id}, —Ö–æ—á–µ—Ç —Å–¥–µ–ª–∞—Ç—å {command}".format(id=user.id,command=command[mes][0]))
	elif mes in command_out: # –ú–æ–º–µ–Ω—Ç–∞–ª—å–Ω—ã–π –¥–µ–π—Å—Ç–≤–∏—è, –±–µ–∑ –¥–æ–ø –≤–≤–æ–¥–∞
		command_out[mes]()
	else: error(mes)
	 	


while True: # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–æ–≤
	data = requests.get(server,params={'act': 'a_check','key': key,'ts': data['ts'],'wait': 25,}).json()
	if data['updates']:   
		for mas in data['updates']:
			user = User.UserClass(mas['object']['message']['from_id'])
			Controller(mas['object']['message']['text'])